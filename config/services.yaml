# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    redis_url: 'redis://%env(REDIS_PASSWORD)%@%env(REDIS_HOST)%:%env(REDIS_PORT)%'
    redis_doctrine_url: '%redis_url%/1'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        App\Application\UseCase\Command\CommandHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: messenger.bus.command }

        App\Application\UseCase\Query\QueryHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: messenger.bus.query }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Domain/Project/Entity'
            - '../src/Domain/Branch/DTO'
            - '../src/Infrastructure/Persistence/Http/Gitlab/ActionsV4'
            - '../src/Infrastructure/Persistence/Action.php'
            - '../src/Kernel.php'

    App\UI\Http\Controller\:
        resource: '../src/UI/Http/Controller'
        tags: [ 'controller.service_arguments' ]
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    sqrsbetting.redis_provider:
        class: Redis
        factory: [ Symfony\Component\Cache\Adapter\RedisAdapter, createConnection ]
        arguments:
            - '%redis_url%'

    sqrsbetting.doctrine.redis_provider:
        class: Redis
        factory: [ Symfony\Component\Cache\Adapter\RedisAdapter, createConnection ]
        arguments:
            - '%redis_doctrine_url%'

    App\Infrastructure\Service\Bus\CommandBus:
        public: true
        arguments:
            - '@messenger.bus.command'
        tags:
            - { name: sqrsbetting.messenger.query_bus }

    App\Infrastructure\Service\Bus\QueryBus:
        arguments:
            - '@messenger.bus.query'
        tags:
            - { name: sqrsbetting.messenger.query_bus }