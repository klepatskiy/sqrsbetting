version: "3.8"

services:
  nginx:
    restart: unless-stopped
    container_name: ${PROJECT}_nginx
    build:
      context: ./docker/context
      dockerfile: images/nginx/dev/Dockerfile
      args:
        PHP_FPM_SERVICE_NAME: php-fpm
    ports:
      - ${NETWORK}:${NGINX_PORT}:80
    volumes:
      - ./public/index.php:/var/www/public/index.php
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php-fpm
    networks:
      - main-network

  php-fpm:
    restart: unless-stopped
    container_name: ${PROJECT}_php-fpm
    ports:
      - ${NETWORK}:9000:9000
    build:
      context: ./docker/context
      dockerfile: images/php-fpm/dev/Dockerfile
    environment:
      PHP_IDE_CONFIG: serverName=php-fpm
      APP_ENV: dev
    volumes:
      - ./:/var/www
    depends_on:
      - postgres
    networks:
      - main-network

  postgres:
    restart: unless-stopped
    container_name: ${PROJECT}_postgres
    build:
      context: ./docker/context
      dockerfile: images/postgres/Dockerfile
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data
      - ./docker/conf/postgres/initdb:/docker-entrypoint-initdb.d
    ports:
      - ${NETWORK}:${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    networks:
      - main-network

  redis:
    image: "redis:alpine"
    container_name: ${PROJECT}_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${NETWORK}:${REDIS_PORT}:6379
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - main-network

  openapigen:
    build:
      context: ./docker/context
      dockerfile: images/openapigen/Dockerfile
    container_name: ${PROJECT}_openapigen
    volumes:
      - ./:/local
networks:
  main-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_NETWORK}
